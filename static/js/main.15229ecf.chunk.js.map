{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","App","useState","isStarted","setIsStarted","setIsReversed","NONE","setSortType","className","type","onClick","current","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASF,SAASC,EACPC,EACAC,EACAC,GAEA,IAAIC,EAAY,YAAOH,GAEvB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEI,OAASH,EAAEG,UAW9C,OAJmB,IAAfR,IACFC,EAAeA,EAAaQ,WAGvBR,G,SA9BJN,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAiCE,IAAMe,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBc,EAAnB,KACA,EAAgCH,mBAAShB,EAASoB,MAAlD,mBAAOhB,EAAP,KAAiBiB,EAAjB,KAEA,OACE,sBAAKC,UAAU,MAAf,UACGL,EAEG,qCACE,wBACEM,KAAK,SACLC,QAAS,WACPH,EAAYrB,EAASO,WAHzB,iCASA,wBACEgB,KAAK,SACLC,QAAS,WACPH,EAAYrB,EAASY,SAHzB,4BASA,wBACEW,KAAK,SACLC,QAAS,WACPL,GAAc,SAAAM,GAAO,OAAKA,MAH9B,qBASA,wBACEF,KAAK,SACLC,QAAS,WACPL,GAAc,GACdE,EAAYrB,EAASoB,OAJzB,sBAYF,wBACEG,KAAK,SACLC,QAAS,WACPN,GAAa,IAHjB,mBAUHD,GACC,oBAAIK,UAAU,QAAd,SACGpB,EAAkBD,EAAiBG,EAAUC,GAAYqB,KACxD,SAAAC,GAAI,OACF,oBAAIL,UAAU,cAAd,SAAwCK,GAAPA,YC9G/CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.15229ecf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => (a.length - b.length));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed === true) {\n    visibleGoods = visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  return (\n    <div className=\"App\">\n      {isStarted\n        ? (\n          <>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setSortType(SortType.ALPHABET);\n              }}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                setSortType(SortType.LENGTH);\n              }}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                setIsReversed(current => !current);\n              }}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                setIsReversed(false);\n                setSortType(SortType.NONE);\n              }}\n            >\n              Reset\n            </button>\n          </>\n        )\n        : (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setIsStarted(true);\n            }}\n          >\n            Start\n          </button>\n        )}\n\n      {isStarted && (\n        <ul className=\"Goods\">\n          {getReorderedGoods(goodsFromServer, sortType, isReversed).map(\n            item => (\n              <li className=\"Goods__item\" key={item}>{item}</li>\n            ),\n          )}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}